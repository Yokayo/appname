Описание API сервера

1) Загрузка файла
Адрес: api/users/file
Тип запроса: POST
В запросе передаются данные в виде multipart/form-data. В единственном поле с названием file содержится передаваемое изображение. Принимаются только файлы с расширением .jpg.
В ответ возвращается идентификатор загруженного файла на сервере, пригодный для дальнейшего использования при создании пользователя.
Единственное поле в ответе:
id - идентификатор файла
Пример тела ответа:
{"id":"/res/1653830308819.jpg"}

2) Добавление пользователя
Адрес: api/users/add
Тип запроса: POST
В теле запроса передаётся JSON с данными будущего пользователя. Новый пользователь по умолчанию находится в статусе OFFLINE.
В ответ возвращается ID вновь созданного пользователя.
Полный список полей запроса:
username - юзернейм
avatarURI - идентификатор картинки-аватарки
email - email адрес
city - город
realName - настоящее имя
birthDate - дата рождения в формате ГГГГ-ММ-ДД
Пример тела запроса:
{"username": "Test user",
"avatarURI": "/res/1653829087158.jpg",
"email": "email@yandex.ru",
"city": "Novosibirsk",
"realName": "Stas",
"birthDate": "2011-01-01"}
Единственное поле в ответе:
id - идентификатор пользователя
Пример тела ответа:
{"id":"b1a9bcd9-8d6f-4166-9e1f-8f0d49a3a88d"}

3) Получение информации о пользователе
Адрес: api/users/id
Тип запроса: GET
Вместо id указывается идентификатор пользователя. В ответ возвращается вся информация о пользователе в формате JSON, или 404, если пользователь не найден.
Полный список полей ответа:
id - идентификатор пользователя
username - юзернейм
avatarURI - идентификатор картинки-аватарки
email - email адрес
city - город
realName - настоящее имя
birthDate - дата рождения в формате ГГГГ-ММ-ДД
status - статус (ONLINE или OFFLINE)
Пример тела ответа:
{"id":"a6971347-9df3-40fd-9827-0763054189bb",
"username":"Тестовый пользователь",
"avatarURI":"/res/1653830308819.jpg",
"email":"email@yandex.ru",
"city":"Novosibirsk",
"realName":"Stas",
"birthDate":"2011-01-01",
"status":"ONLINE"}

4) Смена статуса пользователя
Адрес: api/users/id/status/new_status
Тип запроса: POST
Вместо id указывается идентификатор пользователя, у которого нужно сменить статус, а вместо new_status - сам новый статус строчными буквами (то есть online или offline).
В ответ возвращается JSON с идентификатором пользователя, новым и старым (до смены) статусом.
Полный список полей ответа:
id - идентификатор пользователя
oldStatus - старый статус
newStatus - новый статус
Пример тела ответа:
{"id":"b1a9bcd9-8d6f-4166-9e1f-8f0d49a3a88d",
"oldStatus":"OFFLINE",
"newStatus":"ONLINE"}